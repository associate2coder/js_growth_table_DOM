{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAG/B,EAAQ,CACZ,KAAM,EAAM,IAAI,CAAC,MAAM,CACvB,KAAM,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAClC,EAEM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAY,SAAS,aAAa,CAAC,iBAEzC,CAAA,EAAM,aAAa,CAAG,WACpB,EAAU,QAAQ,CAAG,EAAM,IAAI,EAbrB,GAcV,EAAU,QAAQ,CAAG,EAAM,IAAI,EAbrB,CAcZ,EAEA,EAAM,aAAa,CAAG,WACpB,EAAU,QAAQ,CAAG,EAAM,IAAI,EAlBrB,GAmBV,EAAU,QAAQ,CAAG,EAAM,IAAI,EAlBrB,CAmBZ,EAqDA,EAAU,gBAAgB,CAAC,QAnDH,WACtB,IAAI,CAAA,EAAM,IAAI,EAvBJ,EAuBQ,GAMlB,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAM,IAAI,CAAE,IAC9B,EAAO,UAAU,CAAC,GAGpB,CAAA,EAAM,IAAI,GACV,EAAM,aAAa,GACrB,GAuCA,EAAU,gBAAgB,CAAC,QArCH,WAClB,EAAM,IAAI,EArCJ,IAyCV,EAAM,SAAS,CAAC,IAChB,EAAM,IAAI,GACV,EAAM,aAAa,GACrB,GA8BA,EAAU,gBAAgB,CAAC,QA5BH,WACtB,IAAI,CAAA,EAAM,IAAI,EAhDJ,EAgDQ,GAIb,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAM,IAAI,GACV,EAAM,aAAa,GACrB,GAkBA,EAAU,gBAAgB,CAAC,QAhBH,WACtB,IAAI,CAAA,EAAM,IAAI,EA5DJ,CA4DQ,GAIb,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAM,IAAI,GACV,EAAM,aAAa,GACrB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar MAX = 10;\nvar MIN = 2;\nvar field = {\n    rows: table.rows.length,\n    cols: table.rows[0].cells.length\n};\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendCol = document.querySelector(\".append-column\");\nvar removeCol = document.querySelector(\".remove-column\");\nfield.toggleRowBtns = function() {\n    appendRow.disabled = field.rows >= MAX;\n    removeRow.disabled = field.rows <= MIN;\n};\nfield.toggleColBtns = function() {\n    appendCol.disabled = field.cols >= MAX;\n    removeCol.disabled = field.cols <= MIN;\n};\nvar handleAppendRow = function() {\n    if (field.rows >= MAX) return;\n    var newRow = table.insertRow();\n    for(var i = 0; i < field.cols; i++)newRow.insertCell(-1);\n    field.rows++;\n    field.toggleRowBtns();\n};\nvar handleRemoveRow = function() {\n    if (field.rows <= MIN) return;\n    table.deleteRow(-1);\n    field.rows--;\n    field.toggleRowBtns();\n};\nvar handleAppendCol = function() {\n    if (field.cols >= MAX) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.insertCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    field.cols++;\n    field.toggleColBtns();\n};\nvar handleRemoveCol = function() {\n    if (field.cols <= MIN) return;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.deleteCell(-1);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    field.cols--;\n    field.toggleColBtns();\n};\nappendRow.addEventListener(\"click\", handleAppendRow);\nremoveRow.addEventListener(\"click\", handleRemoveRow);\nappendCol.addEventListener(\"click\", handleAppendCol);\nremoveCol.addEventListener(\"click\", handleRemoveCol);\n\n//# sourceMappingURL=index.c8df9d5a.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst MAX = 10;\nconst MIN = 2;\nconst field = {\n  rows: table.rows.length,\n  cols: table.rows[0].cells.length,\n};\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendCol = document.querySelector('.append-column');\nconst removeCol = document.querySelector('.remove-column');\n\nfield.toggleRowBtns = () => {\n  appendRow.disabled = field.rows >= MAX;\n  removeRow.disabled = field.rows <= MIN;\n};\n\nfield.toggleColBtns = () => {\n  appendCol.disabled = field.cols >= MAX;\n  removeCol.disabled = field.cols <= MIN;\n};\n\nconst handleAppendRow = () => {\n  if (field.rows >= MAX) {\n    return;\n  }\n\n  const newRow = table.insertRow();\n\n  for (let i = 0; i < field.cols; i++) {\n    newRow.insertCell(-1);\n  }\n\n  field.rows++;\n  field.toggleRowBtns();\n};\n\nconst handleRemoveRow = () => {\n  if (field.rows <= MIN) {\n    return;\n  }\n\n  table.deleteRow(-1);\n  field.rows--;\n  field.toggleRowBtns();\n};\n\nconst handleAppendCol = () => {\n  if (field.cols >= MAX) {\n    return;\n  }\n\n  for (const row of table.rows) {\n    row.insertCell(-1);\n  }\n\n  field.cols++;\n  field.toggleColBtns();\n};\n\nconst handleRemoveCol = () => {\n  if (field.cols <= MIN) {\n    return;\n  }\n\n  for (const row of table.rows) {\n    row.deleteCell(-1);\n  }\n\n  field.cols--;\n  field.toggleColBtns();\n};\n\nappendRow.addEventListener('click', handleAppendRow);\nremoveRow.addEventListener('click', handleRemoveRow);\nappendCol.addEventListener('click', handleAppendCol);\nremoveCol.addEventListener('click', handleRemoveCol);\n"],"names":["table","document","querySelector","field","rows","length","cols","cells","appendRow","removeRow","appendCol","removeCol","toggleRowBtns","disabled","toggleColBtns","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.c8df9d5a.js.map"}